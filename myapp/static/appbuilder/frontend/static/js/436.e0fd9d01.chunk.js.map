{"version":3,"file":"static/js/436.e0fd9d01.chunk.js","mappings":"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","sources":["components/EchartCore/EchartCore.tsx","components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx","pages/ChartOptionTempalte.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport * as echarts from 'echarts/core';\nimport {\n    BarChart,\n    // 系列类型的定义后缀都为 SeriesOption\n    BarSeriesOption,\n    PieChart,\n    PieSeriesOption,\n    LineChart,\n    LineSeriesOption,\n    HeatmapChart,\n    HeatmapSeriesOption\n} from 'echarts/charts';\nimport {\n    TitleComponent,\n    // 组件类型的定义后缀都为 ComponentOption\n    TitleComponentOption,\n    TooltipComponent,\n    TooltipComponentOption,\n    GridComponent,\n    GridComponentOption,\n    // 数据集组件\n    DatasetComponent,\n    DatasetComponentOption,\n    LegendComponent,\n    // 内置数据转换器组件 (filter, sort)\n    TransformComponent,\n    CalendarComponentOption,\n    CalendarComponent,\n    VisualMapComponent,\n    VisualMapComponentOption,\n    ToolboxComponent\n} from 'echarts/components';\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport './EchartCore.less';\nimport { Spin } from 'antd';\nimport { FieldNumberOutlined } from '@ant-design/icons';\n\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\nexport type ECOption = echarts.ComposeOption<\n    | BarSeriesOption\n    | LineSeriesOption\n    | TitleComponentOption\n    | TooltipComponentOption\n    | GridComponentOption\n    | DatasetComponentOption\n    | CalendarComponentOption\n    | HeatmapSeriesOption\n    | VisualMapComponentOption\n    | PieSeriesOption\n>;\n\n// 注册必须的组件\necharts.use([\n    LegendComponent,\n    TitleComponent,\n    TooltipComponent,\n    GridComponent,\n    DatasetComponent,\n    TransformComponent,\n    CalendarComponent,\n    VisualMapComponent,\n    ToolboxComponent,\n    BarChart,\n    LineChart,\n    PieChart,\n    LabelLayout,\n    HeatmapChart,\n    UniversalTransition,\n    CanvasRenderer\n]);\n\ninterface IProps {\n    option: ECOption\n    loading?: boolean\n    title?: string\n    style?: React.CSSProperties\n    unit?: string\n    data?: {\n        xData: any[]\n        yData: any[]\n    }\n    isNoData?: boolean\n}\n\nconst defaultChartStyle: React.CSSProperties = {\n    height: 300\n}\n\n// https://echarts.apache.org/handbook/zh/how-to/data/dynamic-data\nexport default function EchartCore(props: IProps) {\n    const [chartInstance, setChartInstance] = useState<echarts.ECharts>()\n    const id = Math.random().toString(36).substring(2);\n\n    const option = {}\n\n    useEffect(() => {\n        const chartDom = document.getElementById(id)\n        if (chartDom) {\n            const chart = echarts.init(chartDom);\n            chart.setOption({ ...option, ...props.option })\n\n            if (!chartInstance) {\n                setChartInstance(chart)\n            }\n        }\n    }, [props.option, props.data])\n\n    return (\n        <Spin spinning={props.loading}>\n            <div className=\"chart-container\">\n                <div id={id} style={{ ...defaultChartStyle, ...props.style }}></div>\n                {\n                    props.isNoData ? <div className=\"chart-nodata\">\n                        <div>暂无数据</div>\n                    </div> : null\n                }\n            </div>\n        </Spin>\n    )\n}\n","import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import React, { ReactNode, useEffect, useState } from 'react';\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\nimport './TableBox.less';\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\nimport emptyImg from '../../images/emptyBg.png';\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\nimport ExportJsonExcel from 'js-export-excel';\nimport { Resizable } from 'react-resizable';\n\nconst CopyToClipboard = require('react-copy-to-clipboard');\n\ninterface IProps {\n\tsize?: 'large' | 'middle' | 'small'\n\ttableKey?: string\n\trowKey?: string | GetRowKey<any>;\n\ttitleNode?: string | ReactNode;\n\tbuttonNode?: ReactNode;\n\tdataSource: any;\n\tcolumns: any;\n\tpagination?: false | TablePaginationConfig;\n\tscroll?:\n\t| ({\n\t\tx?: string | number | true | undefined;\n\t\ty?: string | number | undefined;\n\t} & {\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\n\t})\n\t| undefined;\n\tloading?: boolean;\n\trowSelection?: TableRowSelection<any>;\n\tcancelExportData?: boolean;\n\tonChange?: (\n\t\tpagination: TablePaginationConfig,\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\n\t) => void;\n}\n\nconst customizeRenderEmpty = () => (\n\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\n\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\n\t\t<div>暂无数据</div>\n\t</Row>\n);\n\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\n\tif (!width) {\n\t\treturn <th {...restProps} />;\n\t}\n\n\treturn (\n\t\t<Resizable\n\t\t\twidth={width}\n\t\t\theight={0}\n\t\t\thandle={\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"react-resizable-handle\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tonResize={onResize}\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\n\t\t>\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\n\t\t</Resizable>\n\t);\n};\n\nconst TableBox = (props: IProps) => {\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\n\t\theader: [],\n\t\tdata: [],\n\t});\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\n\n\t// 可伸缩列设置\n\tconst [cols, setCols] = useState(props.columns);\n\tconst handleResize = (index: any) => {\n\t\treturn (_: any, { size }: any) => {\n\t\t\tif (size.width < 100) return\n\t\t\tconst temp = [...cols];\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\n\t\t\t// console.log(currentTableScroll, temp);\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\n\t\t\tsetCols(temp);\n\t\t};\n\t};\n\tconst customColumns = cols.map((col: any, index: any) => {\n\t\treturn {\n\t\t\t...col,\n\t\t\twidth: col.width || 200,\n\t\t\tonHeaderCell: (column: any) => {\n\t\t\t\treturn {\n\t\t\t\t\twidth: column.width,\n\t\t\t\t\tonResize: handleResize(index),\n\t\t\t\t};\n\t\t\t},\n\t\t};\n\t});\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\n\n\tuseEffect(() => {\n\t\tsetCols(props.columns);\n\t}, [props.columns]);\n\n\tuseEffect(() => {\n\t\tsetCurrentTableScroll(props.scroll);\n\t}, [props.scroll]);\n\n\tuseEffect(() => {\n\t\tif (props.dataSource) {\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\n\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t}\n\t}, [props.dataSource, props.columns]);\n\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== '操作');\n\t\tconst tarData: any = [];\n\n\t\tdata.forEach((dataRow: any) => {\n\t\t\tconst row: any = {};\n\t\t\tcolumns.map((colName: string) => {\n\t\t\t\tconst res = dataRow[colName];\n\t\t\t\trow[colName] = res || '';\n\t\t\t});\n\t\t\ttarData.push(row);\n\t\t});\n\n\t\tsetDataFormat({\n\t\t\theader: sheetHeader,\n\t\t\tdata: tarData,\n\t\t});\n\t};\n\n\tconst handleClickOutputExcel = () => {\n\t\tconst option: any = {};\n\t\toption.fileName = 'result';\n\t\toption.datas = [\n\t\t\t{\n\t\t\t\tsheetData: dataFormat.data,\n\t\t\t\tsheetName: 'sheet',\n\t\t\t\tsheetHeader: dataFormat.header,\n\t\t\t},\n\t\t];\n\t\tconst toExcel = new ExportJsonExcel(option);\n\t\ttoExcel.saveExcel();\n\t};\n\n\tconst handleExportJira = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\t'|' +\n\t\t\t\theader.join('|') +\n\t\t\t\t'|' +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\t'|' +\n\t\t\t\t\trowKey.join('|') +\n\t\t\t\t\t'|' +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\n\t\treturn str;\n\t};\n\n\tconst handleExportText = () => {\n\t\tconst header = dataFormat.header;\n\t\tconst data = dataFormat.data;\n\t\tlet str = '';\n\t\tif (header.length && data.length) {\n\t\t\tstr =\n\t\t\t\theader.join('\t') +\n\t\t\t\t`\n`;\n\t\t\tdata.forEach((row: any) => {\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\n\t\t\t\t\tif (item === '') {\n\t\t\t\t\t\treturn ' ';\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tstr =\n\t\t\t\t\tstr +\n\t\t\t\t\trowKey.join('\t') +\n\t\t\t\t\t`\n`;\n\t\t\t});\n\t\t} else {\n\t\t\tstr = '';\n\t\t}\n\t\treturn str;\n\t};\n\n\treturn (\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\n\t\t\t<Modal\n\t\t\t\twidth={1000}\n\t\t\t\tmaskClosable={false}\n\t\t\t\tcentered={true}\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\n\t\t\t\tvisible={exportDataVisible}\n\t\t\t\ttitle={'导出数据'}\n\t\t\t\tonCancel={() => {\n\t\t\t\t\tsetExportDataVisible(false);\n\t\t\t\t}}\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<div style={{ position: 'relative' }}>\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">选择需要导出的列：</span><Checkbox.Group\n\t\t\t\t\t\toptions={props.columns\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\n\t\t\t\t\t\tdefaultValue={[]}\n\t\t\t\t\t\tvalue={filterValue}\n\t\t\t\t\t\tonChange={(values: any) => {\n\t\t\t\t\t\t\tsetFilterValue(values);\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/></div>\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue(\n\t\t\t\t\t\t\t\t\tprops.columns\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t全选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ttype=\"link\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFilterValue([]);\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t反选\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<Tabs>\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success('已复制到粘贴板')}>\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t\t<Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\n\t\t\t\t\t\t\t\t\t导出Excel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Tabs.TabPane>\n\t\t\t\t</Tabs>\n\t\t\t</Modal>\n\t\t\t{\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Space align=\"center\">\n\t\t\t\t\t\t\t{props.buttonNode}\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\n\t\t\t\t\t\t\t\t\t导出数据\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> : null\n\t\t\t}\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\n\t\t\t\t<Table\n\t\t\t\t\tsize={props.size || 'middle'}\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\n\t\t\t\t\tdataSource={props.dataSource}\n\t\t\t\t\t// columns={props.columns}\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\n\t\t\t\t\tcolumns={customColumns}\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\n\t\t\t\t\tscroll={currentTableScroll}\n\t\t\t\t\tloading={props.loading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t\trowSelection={props.rowSelection}\n\t\t\t\t/>\n\t\t\t</ConfigProvider>\n\t\t</Space>\n\t);\n};\n\nexport default TableBox;\n","import React, { ReactNode } from 'react';\nimport { Row, Typography, Col, Space } from 'antd';\nimport './TitleHeader.less';\n\nconst { Title } = Typography;\n\ninterface IProps {\n    title: ReactNode | string;\n    children?: ReactNode;\n    noBorderBottom?: boolean;\n    breadcrumbs?: ReactNode | string;\n}\n\nconst TitleHeader = (props: IProps) => {\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\n    return (\n        <Row\n            className=\"title-header\"\n            justify=\"space-between\"\n            align=\"middle\"\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\n            <div>\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\n                    {props.title}\n                </Title>\n                <div className=\"d-il\">\n                    {props.breadcrumbs}\n                </div>\n            </div>\n\n            <Col>\n                <Space>{props.children ? props.children : null}</Space>\n            </Col>\n        </Row>\n    );\n};\n\nexport default TitleHeader;\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\n\ninterface ModalFormProps {\n\tvisible: boolean;\n\tonCreate: (values: any, form: FormInstance<any>) => void;\n\tonCancel: () => void;\n\tloading?: boolean;\n\tchildren?: any;\n\ttitle?: string;\n\tformData?: Record<string, any>;\n\twidth?: number;\n\tonValuesChange?: () => {}\n}\n\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\n\tconst [form] = Form.useForm();\n\tconst [, updateState] = useState<any>();\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\n\n\tuseEffect(() => {\n\t\tif (props.formData) {\n\t\t\tform.setFieldsValue(props.formData);\n\t\t}\n\t}, [props]);\n\n\tconst [formChangeRes, setFormChangeRes] = useState<{\n\t\tcurrentChange: Record<string, any>\n\t\tallValues: Record<string, any>\n\t}>({\n\t\tcurrentChange: {},\n\t\tallValues: {}\n\t})\n\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\n\n\treturn (\n\t\t<Modal\n\t\t\t// confirmLoading={props.loading}\n\t\t\tdestroyOnClose={true}\n\t\t\tmaskClosable={false}\n\t\t\twidth={props.width || 680}\n\t\t\tvisible={props.visible}\n\t\t\ttitle={props.title}\n\t\t\tokText=\"确定\"\n\t\t\tcancelText=\"取消\"\n\t\t\tonCancel={() => {\n\t\t\t\tform.resetFields();\n\t\t\t\tprops.onCancel();\n\t\t\t}}\n\t\t\tonOk={() => {\n\t\t\t\tconsole.log(form.getFieldsValue())\n\t\t\t\tform.validateFields()\n\t\t\t\t\t.then((values) => {\n\t\t\t\t\t\tprops.onCreate(values, form);\n\t\t\t\t\t\t// form.resetFields();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((info) => {\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\n\t\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<Spin spinning={props.loading}>\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\n\t\t\t\t\tsetFormChangeRes({\n\t\t\t\t\t\tcurrentChange: value,\n\t\t\t\t\t\tallValues\n\t\t\t\t\t})\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\n\t\t\t\t\t\t? props.children(form, formChangeRes)\n\t\t\t\t\t\t: props.children}\n\t\t\t\t</Form>\n\t\t\t</Spin>\n\t\t</Modal>\n\t);\n};\n\nexport default ModalForm;\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './MixSearch.less';\nimport { LabeledValue } from 'antd/lib/select';\n\nconst { Option } = Select;\nexport interface IMixSearchParamItem {\n\tname: string\n\ttype: TMixSearchType\n\ttitle?: string\n\tdefalutValue?: any\n\tplaceHolder?: string\n\toption?: LabeledValue[]\n\tmultiple?: boolean\n\tindexKey?: number\n\tused?: boolean\n}\n\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\n\ninterface IProps {\n\tparams?: IMixSearchParamItem[]\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\n}\n\nconst MixSearch = (props: IProps) => {\n\tconst [form] = Form.useForm();\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\n\n\t// 序列化数据\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\n\t}\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\n\n\tuseEffect(() => {\n\t\tif (props.values) {\n\t\t\tconst group = props.values.length ? props.values : [{\n\t\t\t\tkey: undefined,\n\t\t\t\tvalue: undefined\n\t\t\t}]\n\t\t\tform.setFieldsValue({\n\t\t\t\tgroup\n\t\t\t})\n\n\t\t\tconst tarData = [...currentParamsData]\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\n\t\t\t\t\tconst value = group[j];\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\n\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetCurrentParamsData(tarData)\n\t\t}\n\t}, [props.values])\n\n\tuseEffect(() => {\n\t\tif (props.params && props.params.length) {\n\t\t\tconst formatData = formatParamsData(props.params)\n\t\t\tsetParamsData(formatData)\n\t\t\tconst dataMap = paramsDataMap\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\n\t\t\t\tconst param = formatData[i];\n\t\t\t\tdataMap.set(param.name, param)\n\t\t\t}\n\t\t\tsetParamsDataMap(dataMap)\n\t\t}\n\t}, [props.params])\n\n\t/**利用表单获取查询字段 */\n\tconst handleFinishForm = async (values: any): Promise<void> => {\n\t\tconsole.log(values);\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\n\t\tprops.onChange(tarVal);\n\t};\n\n\t/**展开收起 */\n\tconst handleCollapsed = (): void => {\n\t\tsetCollapsed(!collapsed);\n\t};\n\n\t/**选择筛选类型 */\n\tconst handleSelectType = (name: string, index: number): void => {\n\t\tform.resetFields([['group', index, 'value']]);\n\t\tlet arr = [...typeArr];\n\t\tarr[index] = name;\n\t\tsetTypeArr(arr);\n\t};\n\n\t/**根据选择的类型，渲染input或select */\n\tconst handleRenderValueEl = (index: number): ReactNode => {\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\n\t\tif (key) {\n\t\t\tconst currentItem = paramsDataMap.get(key)\n\t\t\tif (currentItem?.type === 'input') {\n\t\t\t\treturn <Input\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\n\t\t\t} else if (currentItem?.type === 'select') {\n\t\t\t\tconst currentOptions = currentItem?.option || []\n\t\t\t\treturn <Select\n\t\t\t\t\tstyle={{ width: '65%' }}\n\t\t\t\t\tdropdownMatchSelectWidth={500}\n\t\t\t\t\tshowSearch\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\n\t\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\n\t\t\t\t/>\n\t\t\t}\n\t\t} else {\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\n\t\t}\n\t};\n\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\n\t// \tif (open) {\n\t// \t\tif (selectionData[key]) {\n\t// \t\t\treturn;\n\t// \t\t}\n\t// \t\ttry {\n\t// \t\t\tlet res = await getSelections(key);\n\t// \t\t\tlet data = { ...selectionData };\n\t// \t\t\tdata[key] = res.data.data;\n\t// \t\t\tsetSelectionData(data);\n\t// \t\t} catch (error) { }\n\t// \t}\n\t// };\n\n\t/**输入框回车操作 */\n\tconst handlePressEnter = (): void => {\n\t\tform.validateFields();\n\t};\n\n\treturn (\n\t\t<Form\n\t\t\t// {...formConfig}\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\n\t\t\tform={form}\n\t\t\tonFinish={handleFinishForm}\n\t\t\tinitialValues={{\n\t\t\t\tgroup: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: undefined,\n\t\t\t\t\t\tvalue: undefined,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t>\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\n\t\t\t\t<Form.List name={`group`}>\n\t\t\t\t\t{(fields, { add, remove }) => {\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请选择key' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"请选择\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: '请填写value' }]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t{(\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\n\t\t\t\t\t\t\t\t\tadd()\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t}}\n\t\t\t\t</Form.List>\n\n\t\t\t\t<Col flex={1}>\n\t\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\t查询\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\n\t\t\t\t\t{collapsed ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Col>展开</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<DownOutlined />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Col>收起</Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<UpOutlined />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n};\n\nexport default MixSearch;\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Space, Steps, Tooltip } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { MinusCircleOutlined, PlusOutlined, QuestionCircleOutlined, SyncOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\nimport 'moment/locale/zh-cn';\nimport locale from 'antd/es/date-picker/locale/zh_CN';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value?: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select'\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n\n        let extraContent: any = null\n\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">详情</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={config.placeHolder || `请选择${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={<>\n                            {config.data.tips ? <Tooltip\n                                className=\"mr8\"\n                                placement=\"bottom\"\n                                title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                            >\n                                <div className=\"cp d-il\">\n                                    <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                                    <span className=\"pl4 c-theme\">详情</span>\n                                </div>\n                            </Tooltip> : null}\n                            {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        </>}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">详情</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <InputSearch\n                onClick={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                isOpenSearchMatch={true}\n                disabled={config.disable}\n                placeholder={`请选择${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">详情</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            </>}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={config.placeHolder || `请选择${config.label}`} />\n        </Form.Item>\n    }\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={<>\n                {config.data.tips ? <Tooltip\n                    className=\"mr8\"\n                    placement=\"bottom\"\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\n                >\n                    <div className=\"cp d-il\">\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">详情</span>\n                    </div>\n                </Tooltip> : null}\n                {config.description ? <span className=\"pr4\" dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                {\n                    config.data.isRefresh ? <div className=\"cp d-il\" onClick={() => {\n                        props.onRetryInfoChange && props.onRetryInfoChange()\n                    }}>\n                        <SyncOutlined style={{ color: '#1672fa' }} />\n                        <span className=\"pl4 c-theme\">刷新列表</span>\n                    </div> : null\n                }\n            </>}\n            {...itemProps}\n        >\n            <Select\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={config.placeHolder || `请选择${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={[{ required: true, message: '请选择时间范围' }]}\n            {...itemProps}\n        >\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} />\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                // <Space key={key} style={{ display: 'flex', marginBottom: 8 }}\n                                //     align='baseline'\n                                // >\n                                //     {\n                                //         item.list && item.list.map(listItem => {\n                                //             return dispatchRenderFormItem(listItem, {\n                                //                 ...restField,\n                                //                 name: [name, listItem.name],\n                                //                 // style: { flexDirection: 'column' }\n                                //             })\n                                //         })\n                                //     }\n                                //     {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                //     <Form.Item wrapperCol={{ offset: 5 }}>\n                                //         <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                //             删除该项\n                                //         </Button>\n                                //     </Form.Item>\n                                // </Space>\n                                <div key={key} className=\"bor b-side pt8 plr16 mb8 d-f\" style={{ alignItems: 'start', minWidth: 1600 }}>\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name],\n                                                labelAlign: 'left',\n                                                labelCol: 24,\n                                                style: { flexDirection: 'column', flex: 1, marginBottom: 8 },\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item >\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />} style={{ width: 120 }}>\n                                            删除该项\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\" label=\"\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    增加一项\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return <div style={{ width: 680 }}>\n                    {dispatchRenderFormItem(item)}\n                </div>\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                上一步\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                下一步\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">点击确定完成提交</div>\n                            )}\n                        </div>\n                    </div>\n                </> : <div style={{ width: 680 }}>\n                        {\n                            renderFormItem(currentConfig || [])\n                        }\n                    </div>\n            }\n        </>\n    )\n}\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination, Switch } from 'antd';\nimport { Content } from 'antd/lib/layout/layout';\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\nimport TableBox from '../components/TableBox/TableBox';\nimport moment from \"moment\";\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getParam, getTableScroll } from '../util';\nimport ModalForm from '../components/ModalForm/ModalForm';\nimport cookies from 'js-cookie';\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, actionADUGTemplateRetryInfo, actionADUGTemplateFavorite, actionADUGTemplateCancelFavorite, actionADUGTemplateChartOption } from '../api/kubeflowApi';\nimport { ColumnsType } from 'antd/lib/table';\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig } from '../components/DynamicForm/DynamicForm';\nimport ChartOptionTempalte from './ChartOptionTempalte';\n\ninterface fatchDataParams {\n    pageConf: TablePaginationConfig\n    params: any[]\n    paramsMap: Record<string, any>\n    sorter?: ISorterParam\n    only_favorite?: boolean\n}\n\ninterface ISorterParam {\n    order_column: string\n    order_direction: 'desc' | 'asc'\n}\n\nexport default function TaskListManager(props?: IAppMenuItem) {\n    const PAGE_SIZE = 20;\n    const navigate = useNavigate();\n    const location = useLocation()\n    const [dataList, setDataList] = useState<any[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [loadingAdd, setLoadingAdd] = useState(false)\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\n    const [visableUpdate, setVisableUpdate] = useState(false)\n    const [loadingDetail, setLoadingDetail] = useState(false)\n    const [visableDetail, setVisableDetail] = useState(false)\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\n    const pageInfoInit: TablePaginationConfig = {\n        current: 1,\n        pageSize: PAGE_SIZE,\n        total: 0,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        pageSizeOptions: [20, 50, 100, 500],\n        showTotal: (total) => `共${total}条`,\n    };\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\n    const filterValuesRef = useRef(filterValues);\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\n        filterValuesRef.current = data;\n        _setFilterValues(data);\n    };\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\n\n    let customFormData: Record<string, string> = {}\n    try {\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\n    } catch (err) { }\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\n    const labelMapRef = useRef(labelMap);\n    const setLabelMap = (data: Record<string, string>): void => {\n        labelMapRef.current = data;\n        _setLabelMap(data);\n    };\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\n    const [tableWidth, setTableWidth] = useState(1000)\n    const [permissions, setPermissions] = useState<string[]>([])\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\n    const [helpUrl, setHelpUrl] = useState<string | null>()\n\n    const [baseUrl, _setBaseUrl] = useState<string>()\n    const baseUrlRef = useRef(baseUrl);\n    const setBaseUrl = (data: string): void => {\n        baseUrlRef.current = data;\n        _setBaseUrl(data);\n    };\n    const [isImportData, setIsImportData] = useState(false)\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\n    const [sorterParam, setSorterParam] = useState<{\n        order_column: string\n        order_direction: 'desc' | 'asc'\n    }>()\n    const [primaryKey, setPrimaryKey] = useState('')\n    const [labelTitle, setLabelTitle] = useState('')\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\n    const [list_ui_args, setList_ui_args] = useState<{\n        card_width: string\n        card_height: string\n    }>()\n    const [opsLink, setOpsLink] = useState<Array<{\n        text: string\n        url: string\n    }>>([])\n    const [listColumns, setListColumns] = useState<string[]>([])\n    const [isAllDataList, _setIsAllDataList] = useState(true)\n    const isAllDataListRef = useRef(isAllDataList);\n    const setIsAllDataList = (data: boolean): void => {\n        isAllDataListRef.current = data;\n        _setIsAllDataList(data);\n    };\n    const [isShowCollect, _setIsShowCollect] = useState(false)\n    const isShowCollectRef = useRef(isShowCollect);\n    const setIsShowCollect = (data: boolean): void => {\n        isShowCollectRef.current = data;\n        _setIsShowCollect(data);\n    };\n    const [isEchartShow, setIsEchartShow] = useState(false)\n    const [pageSize, setPageSize] = useState(PAGE_SIZE)\n    const [listTitle, setListTitle] = useState<string>()\n\n\n    const [scrollY, setScrollY] = useState(\"\")\n\n    const fetchDataParams = {\n        pageConf: pageInfoInit,\n        params: [],\n        paramsMap: filterParamsMap,\n        sorter: undefined\n    }\n\n    useEffect(() => {\n\n    }, [pageSize])\n\n    useEffect(() => {\n        setScrollY(getTableScroll())\n    }, [])\n\n    useEffect(() => {\n        if (props && props.disable) {\n            navigate('/404')\n        }\n    }, [])\n\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        return data.map((item, index) => {\n            let type = item['ui-type'] || 'input'\n            if (type === 'select2') {\n                type = 'select'\n            }\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `请选择${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `请输入${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `请输入正确的长度` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.description || description_columns[item.name] || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    useEffect(() => {\n        const targetId = getParam('targetId')\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\n        setLoadingAdd(true)\n\n        getADUGTemplateApiInfo(url).then(res => {\n            const {\n                list_columns,\n                label_columns,\n                filters,\n                add_columns,\n                edit_columns,\n                permissions,\n                description_columns,\n                add_fieldsets,\n                edit_fieldsets,\n                help_url,\n                order_columns,\n                action,\n                route_base,\n                column_related,\n                primary_key,\n                label_title,\n                cols_width,\n                import_data,\n                download_data,\n                list_ui_type,\n                list_ui_args,\n                ops_link,\n                enable_favorite,\n                echart,\n                page_size,\n                list_title\n            } = res.data\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\n\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\n                .reduce((pre: any[], [key, value]) => ([...pre, {\n                    dep: value.src_columns,\n                    effect: value.des_columns.join(''),\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\n                }]), [])\n\n            const listColumns = list_columns.map(column => {\n                return {\n                    title: label_columns[column] || column,\n                    dataIndex: column,\n                    key: column,\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\n                    render: (text: any, record: any) => {\n                        if (text === undefined || text === '') {\n                            return '-'\n                        }\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\n                                </div>\n                            </Tooltip>\n                        }\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\n                            if (!tarRes.length) {\n                                return '-'\n                            }\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\n                                {\n                                    tarRes.map((item: any, index: number) => {\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\n                                    })\n                                }\n                            </div>\n                        }\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\n                    },\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\n                }\n            })\n\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\n\n            const tableAction: any = {\n                title: '操作',\n                width: actionwidth,\n                dataIndex: 'handle',\n                key: 'handle',\n                align: 'right',\n                fixed: 'right',\n                render: (text: any, record: any) => {\n                    return (\n                        <Space size=\"middle\">\n                            {\n                                hasAction ? <Dropdown overlay={<Menu>\n                                    {\n                                        isShowCollectRef.current && isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '收藏',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定收藏?',\n                                                okText: '确认收藏',\n                                                cancelText: '取消',\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('收藏成功');\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('收藏失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>收藏</div></Menu.Item> : null\n                                    }\n                                    {\n                                        isShowCollectRef.current && !isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '取消收藏',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定取消收藏?',\n                                                okText: '确认取消收藏',\n                                                cancelText: '取消',\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateCancelFavorite(`${route_base}favorite/${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('操作成功');\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('操作失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>取消收藏</div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableDetail(true)\n                                            fetchDataDetail(record[primary_key])\n                                        }}>\n                                            详情\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\n                                            setVisableUpdate(true)\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\n                                                const { edit_columns, label_columns, description_columns } = res.data\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\n                                                    return {\n                                                        group: group.group,\n                                                        expanded: group.expanded,\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\n                                                    }\n                                                })\n\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\n\n                                                fetchDataDetail(record[primary_key])\n                                            }).catch(() => {\n                                                message.warn('用户没有修改权限')\n                                            })\n                                        }}>\n                                            修改\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\n                                            Modal.confirm({\n                                                title: '删除',\n                                                icon: <ExclamationCircleOutlined />,\n                                                content: '确定删除?',\n                                                okText: '确认删除',\n                                                cancelText: '取消',\n                                                okButtonProps: { danger: true },\n                                                onOk() {\n                                                    return new Promise((resolve, reject) => {\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\n                                                            .then((res) => {\n                                                                resolve('');\n                                                            })\n                                                            .catch((err) => {\n                                                                reject();\n                                                            });\n                                                    })\n                                                        .then((res) => {\n                                                            message.success('删除成功');\n                                                            fetchData({\n                                                                ...fetchDataParams,\n                                                                pageConf: pageInfo,\n                                                                params: filterValuesRef.current,\n                                                                paramsMap: filters\n                                                            });\n                                                        })\n                                                        .catch(() => {\n                                                            message.error('删除失败');\n                                                        });\n                                                },\n                                                onCancel() { },\n                                            });\n                                        }}>\n                                            删除\n                                        </div></Menu.Item> : null\n                                    }\n                                    {\n                                        props?.related?.map((item, index) => {\n                                            return <Menu.Item key={`moreAction_${index}`}>\n                                                <div className=\"link\" onClick={() => {\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\n                                                }}>\n                                                    {item.title}\n                                                </div>\n                                            </Menu.Item>\n                                        })\n                                    }\n                                    {\n                                        !!singleAction.length && singleAction.map((action, index) => {\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\n                                                Modal.confirm({\n                                                    title: action.confirmation,\n                                                    icon: <ExclamationCircleOutlined />,\n                                                    content: '',\n                                                    okText: `确认${action.confirmation}`,\n                                                    cancelText: '取消',\n                                                    onOk() {\n                                                        return new Promise((resolve, reject) => {\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\n                                                                .then((res) => {\n                                                                    resolve(res);\n                                                                })\n                                                                .catch((err) => {\n                                                                    reject(err);\n                                                                });\n                                                        })\n                                                            .then((res: any) => {\n                                                                message.success('操作成功');\n\n                                                                if (res.data.result.link) {\n                                                                    window.open(res.data.result.link, 'bank')\n                                                                }\n                                                                fetchData({\n                                                                    ...fetchDataParams,\n                                                                    pageConf: pageInfo,\n                                                                    params: filterValuesRef.current,\n                                                                    paramsMap: filters\n                                                                });\n                                                            })\n                                                            .catch(() => {\n                                                                message.error('操作失败');\n                                                            });\n                                                    },\n                                                    onCancel() { },\n                                                });\n                                            }}>\n                                                {action.text}\n                                            </div></Menu.Item>\n                                        })\n                                    }\n                                </Menu>}>\n                                    <div className=\"link\">更多<DownOutlined /></div>\n                                </Dropdown> : null\n                            }\n                        </Space>\n                    );\n                },\n            }\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\n            if (hasAction) {\n                tarColumns.push(tableAction)\n            }\n\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            if (customFormData && Object.keys(customFormData).length) {\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\n                let reTryInfoFlag = reTryInfoQuene.length\n\n                const handleReTryInfo = (tar: string) => {\n                    reTryInfoFlag = reTryInfoFlag - 1;\n\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                            return {\n                                group: group.group,\n                                expanded: group.expanded,\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\n                            }\n                        })\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                        setDynamicFormDataAdd(formReset)\n                        setDynamicFormConfigAdd(formConfigAdd)\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n                        if (reTryInfoFlag) {\n                            const resTar = JSON.stringify(formReset)\n                            handleReTryInfo(resTar)\n                        }\n                    }).catch(err => {\n                        message.error('字段切换错误')\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }\n\n                if (reTryInfoQuene.length) {\n                    const formRes = customFormData\n                    for (const key in formRes) {\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                            const value = formRes[key];\n                            if (value === undefined) {\n                                delete formRes[key]\n                            }\n                        }\n                    }\n                    const tar = JSON.stringify(formRes)\n\n                    handleReTryInfo(tar)\n                }\n            }\n\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n            edit_columns.forEach((item) => {\n                if (item['ui-type'] === 'list') {\n                    item.info.forEach((itemInfo: any) => {\n                        updateColumnsMap[itemInfo.name] = itemInfo\n                    })\n                }\n            })\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                return {\n                    group: group.group,\n                    expanded: group.expanded,\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                }\n            })\n\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\n                .reduce((pre: any, [name, value]) => {\n                    return [...pre, {\n                        name,\n                        type: value['ui-type'] || 'input',\n                        title: label_columns[name],\n                        oprList: value.filter.map(item => item.operator),\n                        defalutValue: value.default === '' ? undefined : value.default,\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\n                    }]\n                }, [])\n\n            let currentFilterValues = Object.entries(filters)\n                .reduce((pre: any, [key, value]) => {\n                    return [...pre, {\n                        key,\n                        value: value.default\n                    }]\n                }, []).filter((item: any) => item.value)\n\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\n            let urlFilter = undefined\n            if (getParam('filter')) {\n                try {\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\n                } catch (error) {\n                    message.error('filter解析异常')\n                }\n            }\n            const localFilter = urlFilter || localCacheFilter\n            if (localFilter && localFilter.length) {\n                currentFilterValues = localFilter\n            }\n\n            setListTitle(list_title)\n            setPageSize(page_size)\n            setIsEchartShow(echart)\n            setIsShowCollect(enable_favorite)\n            setOpsLink(ops_link)\n            setListColumns(list_columns)\n            setList_ui_type(list_ui_type)\n            setList_ui_args(list_ui_args)\n            setIsDownLoadData(download_data)\n            setIsImportData(import_data)\n            setLabelTitle(label_title)\n            setPrimaryKey(primary_key)\n            setColumnRelateFormat(columnRelatedFormat)\n            setMultipleAction(multipleAction)\n            setBaseUrl(route_base)\n            setUpdateColumnsMap(updateColumnsMap)\n            setFilterParamsMap(filters)\n            setCurrentColumns(tarColumns)\n            setFilterParams(tarFilter)\n            setDynamicFormConfigAdd(formConfigAdd)\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n\n            setLabelMap(label_columns)\n            setPermissions(permissions)\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\n            setTableWidth(currentTableWidth)\n            setHelpUrl(help_url)\n            setFilterValues(currentFilterValues)\n\n            fetchData({\n                pageConf: {\n                    ...pageInfoInit,\n                    pageSize: page_size\n                },\n                params: currentFilterValues,\n                paramsMap: filters,\n                sorter: undefined\n            });\n\n        }).catch(err => {\n            console.log(err);\n        }).finally(() => {\n            setLoading(false)\n            setLoadingAdd(false)\n        })\n    }, []);\n\n    const formatFilterParams = (params: any[], paramsMap: Record<string, any>) => {\n        let formatData = undefined\n        const temlateId = getParam('id')\n\n        formatData = {\n            filters: [\n                temlateId ? {\n                    col: props?.model_name,\n                    opr: \"rel_o_m\",\n                    value: +temlateId\n                } : undefined,\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\n                    let opr = ''\n                    const oprList = ['rel_o_m', 'ct', 'eq']\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\n\n                    for (let i = 0; i < oprList.length; i++) {\n                        const currentOpr = oprList[i];\n                        if (sourceOprList.includes(currentOpr)) {\n                            opr = currentOpr\n                            break\n                        }\n                    }\n\n                    return {\n                        col: param.key,\n                        opr: opr,\n                        value: param.value\n                    }\n                })\n            ].filter(item => !!item),\n        }\n        return formatData\n    }\n\n    const fetchData = ({\n        pageConf,\n        params,\n        paramsMap,\n        sorter,\n        only_favorite\n    }: fatchDataParams = {\n            pageConf: pageInfoInit,\n            params: filterValues,\n            paramsMap: filterParamsMap,\n            sorter: undefined,\n            only_favorite: false\n        }) => {\n        setLoading(true);\n\n        const form_data = JSON.stringify({\n            ...formatFilterParams(params, paramsMap),\n            only_favorite,\n            str_related: 1,\n            page: (pageConf.current || 1) - 1,\n            page_size: pageConf.pageSize || 10,\n            ...sorter\n        })\n\n        getADUGTemplateList(baseUrlRef.current, {\n            form_data,\n        })\n            .then((res) => {\n                const { count, data } = res.data.result\n                setDataList(data);\n                setSelectedRowKeys([])\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\n                setSorterParam(sorter)\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const fetchDataDetail = (id: string) => {\n        setLoadingDetail(true)\n        setDataDetail([])\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\n            .then(res => {\n                const data = res.data.result\n                const detail: any[] = []\n                const formatValue = (data: any) => {\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\n                        return data.last_name\n                    }\n                    return data\n                }\n                Object.keys(data).forEach(key => {\n                    detail.push({\n                        label: labelMapRef.current[key] || key,\n                        value: formatValue(data[key]),\n                        key\n                    })\n                })\n                setDataDetail(detail)\n            })\n            .catch(err => { })\n            .finally(() => { setLoadingDetail(false) })\n    }\n\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\n        if (selectedRowKeys.length) {\n            Modal.confirm({\n                title: action.confirmation,\n                icon: <ExclamationCircleOutlined />,\n                content: '',\n                okText: `确认${action.confirmation}`,\n                cancelText: '取消',\n                onOk() {\n                    return new Promise((resolve, reject) => {\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\n                        })\n                            .then((res) => {\n                                resolve('');\n                            })\n                            .catch((err) => {\n                                reject();\n                            });\n                    })\n                        .then((res) => {\n                            message.success('操作成功');\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(() => {\n                            message.error('操作失败');\n                        });\n                },\n                onCancel() { },\n            });\n        } else {\n            message.warn('请先选择')\n        }\n    }\n\n    const uploadConfig: UploadProps = {\n        name: 'csv_file',\n        maxCount: 1,\n        action: `${baseUrl}upload/`,\n        headers: {\n            authorization: 'authorization-text',\n        },\n        beforeUpload: file => {\n            const isCSV = file.name.indexOf('.csv') !== -1;\n            if (!isCSV) {\n                message.error(`${file.name} 并不是csv文件`);\n            }\n            return isCSV || Upload.LIST_IGNORE;\n        },\n        onChange(info) {\n            if (info.file.status === 'done') {\n                notification['success']({\n                    message: '导入成功',\n                    description: JSON.stringify(info.file.response),\n                });\n            } else if (info.file.status === 'error') {\n                notification['error']({\n                    message: '导入失败',\n                    description: JSON.stringify(info.file.response),\n                });\n            }\n        },\n    };\n\n    return (\n        <div className=\"fade-in h100 d-f fd-c\">\n            {/* 添加 */}\n            <ModalForm\n                title={`添加${labelTitle}`}\n                // width={1000}\n                formData={dynamicFormDataAdd}\n                loading={loadingAdd}\n                visible={visableAdd}\n                onCancel={() => { setVisableAdd(false) }}\n                onCreate={(values, form) => {\n                    setLoadingAdd(true)\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\n                        message.success(`添加${labelTitle}成功`)\n                        form.resetFields()\n                        setVisableAdd(false)\n                        fetchData({\n                            ...fetchDataParams,\n                            pageConf: pageInfo,\n                            params: filterValues,\n                            sorter: sorterParam,\n                            paramsMap: filterParamsMap\n                        });\n                    }).catch(err => {\n                        message.error(`添加${labelTitle}失败`)\n                    }).finally(() => {\n                        setLoadingAdd(false)\n                    })\n                }}\n            >\n                {\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\n                        setLoadingAdd(true)\n\n                        const formRes = form.getFieldsValue()\n                        for (const key in formRes) {\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\n                                const value = formRes[key];\n                                if (value === undefined) {\n                                    delete formRes[key]\n                                }\n                            }\n                        }\n                        const tar = JSON.stringify(formRes)\n                        form.resetFields()\n\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\n                                return {\n                                    group: group.group,\n                                    expanded: group.expanded,\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\n                                }\n                            })\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\n\n                            form.setFieldsValue(formReset)\n                            setDynamicFormConfigAdd(formConfigAdd)\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\n                        }).catch(err => {\n                            message.error('字段切换错误')\n                        }).finally(() => {\n                            setLoadingAdd(false)\n                        })\n\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\n                }\n            </ModalForm>\n            {/* 修改 */}\n            <ModalForm\n                title={`修改${labelTitle}`}\n                // width={1500}\n                formData={dataDetail.reduce((pre, next) => {\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\n                        let value = next.value\n                        const options = (updateColumnsMap[next.key] || {}).values || []\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\n                        if (~tarIndex) {\n                            value = options[tarIndex].id\n                        }\n                        return { ...pre, [next.key]: value }\n                    }\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\n                        let value = next.value;\n                        value = moment(value)\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\n                        const value = (next.value || []).map((item: any) => {\n                            for (const listItemKey in item) {\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\n                                    const listItemValue = item[listItemKey];\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\n                                        item[listItemKey] = moment(listItemValue)\n                                    }\n                                }\n                            }\n                            return item\n                        })\n                        return { ...pre, [next.key]: value }\n                    }\n\n                    return { ...pre, [next.key]: next.value }\n                }, {})}\n                loading={loadingUpdate || loadingDetail}\n                visible={visableUpdate}\n                onCancel={() => { setVisableUpdate(false) }}\n                onCreate={(values) => {\n                    setLoadingUpdate(true)\n                    setDataDetail([])\n                    for (const key in values) {\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\n                            const value = values[key];\n                            if (Array.isArray(value)) {\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\n                                    continue\n                                }\n                                values[key] = values[key].join(',')\n                            }\n                        }\n                    }\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\n                        .then(res => {\n                            message.success(`更新${labelTitle}成功`)\n                            setVisableUpdate(false)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfo,\n                                params: filterValues,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        })\n                        .catch(err => {\n                            message.error(`更新${labelTitle}失败`)\n                        })\n                        .finally(() => { setLoadingUpdate(false) })\n                }}\n            >\n                {\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\n                }\n            </ModalForm>\n            {/* 详情 */}\n            <Modal\n                title={`${labelTitle}详情`}\n                visible={visableDetail}\n                footer={null}\n                width={800}\n                destroyOnClose\n                onCancel={() => { setVisableDetail(false) }}>\n                <Spin spinning={loadingDetail}>\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\n                        {\n                            dataDetail.map((item, index) => {\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\n                                        __html: (() => {\n                                            let content = item.value\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\n                                                try {\n                                                    content = JSON.stringify(item.value)\n                                                } catch (error) { }\n                                            }\n                                            return content\n                                        })()\n                                    }}></pre></Col>\n                                </Row>\n                            })\n                        }\n                    </div>\n                </Spin>\n            </Modal>\n\n            <TitleHeader title={<>\n                {\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\n                        navigate('/data/metadata/metadata_dimension')\n                        window.location.reload()\n                    }}><RollbackOutlined />返回</Button> : null\n                }\n                <span>{labelTitle}</span>\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-icon-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\n            })} >\n                {\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\n                        window.open(helpUrl, 'blank')\n                    }}>帮助链接</span><QuestionCircleOutlined /></div> : null\n                }\n            </TitleHeader>\n            <Content className=\"appmgmt-content bg-title h100 d-f fd-c\">\n                <div className=\"mlr16 mb16 flex1 bg-w\">\n                    {\n                        !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\n                            localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\n                            setFilterValues(values)\n                            fetchData({\n                                ...fetchDataParams,\n                                pageConf: pageInfoInit,\n                                params: values,\n                                sorter: sorterParam,\n                                paramsMap: filterParamsMap\n                            });\n                        }} />\n                    }\n\n                    {\n                        isEchartShow ? <ChartOptionTempalte url={baseUrl} /> : null\n                    }\n\n                    {\n                        list_ui_type !== 'card' ? <TableBox\n                            cancelExportData={true}\n                            tableKey={`tablebox_${location.pathname}`}\n                            titleNode={<Col className=\"tablebox-title\">\n                                <div className=\"d-f ac\">\n                                    <div className=\"mr8\">{listTitle || ''}</div>\n                                    {\n                                        isShowCollect ? <div className=\"pb2\">\n                                            <Switch checked={isAllDataList} checkedChildren=\"全部\" unCheckedChildren=\"我的收藏\" defaultChecked onChange={(checked) => {\n                                                setIsAllDataList(checked)\n                                                fetchData({\n                                                    ...fetchDataParams,\n                                                    pageConf: pageInfoInit,\n                                                    params: filterValues,\n                                                    sorter: sorterParam,\n                                                    paramsMap: filterParamsMap,\n                                                    only_favorite: !checked\n                                                });\n                                            }} />\n                                        </div> : null\n                                    }\n                                </div>\n                            </Col>}\n                            buttonNode={<div className=\"d-f ac\">\n                                {\n                                    opsLink && opsLink.length ? opsLink.map(config => {\n                                        return <Button type=\"primary\" className=\"mr16\" onClick={() => {\n                                            window.open(config.url, 'bank')\n                                        }}>{config.text}</Button>\n                                    }) : null\n                                }\n\n                                {\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>添加{labelTitle}<PlusOutlined /></Button> : null\n                                }\n                                <div>\n                                    <Dropdown overlay={<Menu>\n                                        {\n                                            multipleAction.map((action, index) => {\n                                                return <Menu.Item key={`table_muliple_${index}`}>\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\n                                                        {`批量${action.text}`}\n                                                    </span>\n                                                </Menu.Item>\n                                            })\n                                        }\n\n                                    </Menu>}>\n                                        <Button>批量操作 <DownOutlined /></Button>\n                                    </Dropdown>\n                                </div>\n                                {\n                                    isImportData ? <div className=\"d-f ml16\">\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\"><div>注意：csv逗号分隔，</div><div>第一行为列的英文名</div> <div className=\"link\" onClick={() => {\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\n                                        }}>下载导入模板</div></span>} placement=\"topLeft\">\n                                            <Upload {...uploadConfig}>\n                                                <Button className=\"\" icon={<UploadOutlined />}>批量导入数据</Button>\n                                            </Upload>\n                                        </Tooltip>\n                                    </div> : null\n                                }\n                                {\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\n                                        Modal.confirm({\n                                            title: '导出数据',\n                                            icon: <ExclamationCircleOutlined />,\n                                            content: '',\n                                            okText: '确认导出数据',\n                                            cancelText: '取消',\n                                            onOk() {\n                                                const formatData = formatFilterParams(filterValues, filterParamsMap)\n                                                const form_data = JSON.stringify(formatData)\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download?form_data=${form_data}`)\n                                                message.success('导出成功');\n                                            },\n                                            onCancel() { },\n                                        });\n                                    }}>批量导出  <ExportOutlined /></Button> : null\n                                }\n\n                            </div>}\n                            rowKey={(record: any) => {\n                                return JSON.stringify(record)\n                            }}\n                            columns={currentColumns}\n                            loading={loading}\n                            pagination={pageInfo}\n                            dataSource={dataList}\n                            onChange={(pageInfo: any, filters, sorter: any) => {\n                                const tarSorter = sorter.order ? {\n                                    order_column: sorter.columnKey,\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\n                                } as ISorterParam : undefined\n\n                                fetchData({\n                                    ...fetchDataParams,\n                                    pageConf: pageInfo,\n                                    params: filterValues,\n                                    paramsMap: filterParamsMap,\n                                    sorter: tarSorter\n                                });\n                            }}\n                            rowSelection={{\n                                type: 'checkbox',\n                                fixed: 'left',\n                                columnWidth: 32,\n                                selectedRowKeys,\n                                onChange: (selectedRowKeys) => {\n                                    setSelectedRowKeys(selectedRowKeys)\n                                }\n                            }}\n                            scroll={{ x: tableWidth, y: scrollY }}\n                        /> : <div className=\"bg-w p16\">\n                            <div className=\"d-f fw\">\n                                {\n                                    dataList.map((row, rowIndex) => {\n                                        return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\n                                            {\n                                                Object.keys(row).map((key, itemIndex) => {\n                                                    if (listColumns.includes(key)) {\n                                                        return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\n                                                    }\n                                                    return null\n                                                })\n                                            }\n                                        </div>\n                                    })\n                                }\n                            </div>\n                            <div className=\"ta-r\">\n                                <Pagination {...pageInfo} onChange={(page, pageSize) => {\n                                    fetchData({\n                                        ...fetchDataParams,\n                                        pageConf: {\n                                            ...pageInfo,\n                                            current: page,\n                                            pageSize\n                                        },\n                                        params: filterValues,\n                                        paramsMap: filterParamsMap,\n                                    });\n                                }} />\n                            </div>\n                        </div>\n                    }\n                </div>\n            </Content>\n        </div >\n    );\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { actionADUGTemplateChartOption } from '../api/kubeflowApi'\nimport EchartCore, { ECOption } from '../components/EchartCore/EchartCore'\n\ninterface IProps {\n    url?: string\n}\n\nexport default function ChartOptionTempalte(props: IProps) {\n    const [option, setOption] = useState<ECOption>({})\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        if (props.url) {\n            actionADUGTemplateChartOption(`${props.url}echart`, {}).then(res => {\n                const option = res.data.result\n                var currentOps: any = {}\n                eval(`currentOps=${option}`)\n                setOption(currentOps)\n            }).catch(err => { }).finally(() => {\n                setLoading(false)\n            })\n        }\n    }, [props.url])\n\n    return (\n        <EchartCore option={option} loading={loading} />\n    )\n}\n"],"names":["echarts","LegendComponent","TitleComponent","TooltipComponent","GridComponent","DatasetComponent","TransformComponent","CalendarComponent","VisualMapComponent","ToolboxComponent","BarChart","LineChart","PieChart","LabelLayout","HeatmapChart","UniversalTransition","CanvasRenderer","defaultChartStyle","height","EchartCore","props","useState","chartInstance","setChartInstance","id","Math","random","toString","substring","option","useEffect","chartDom","document","getElementById","chart","setOption","data","spinning","loading","className","style","isNoData","InputSearch","inputRef","options","dataCache","setDataCache","value","setValue","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","customizeRenderEmpty","justify","align","flexDirection","src","emptyImg","alt","ResizableTitle","onResize","restProps","Resizable","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","scroll","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","label","defaultValue","bottom","type","tab","text","onCopy","message","cursor","minHeight","datas","sheetData","sheetName","ExportJsonExcel","saveExcel","titleNode","buttonNode","cancelExportData","marginLeft","renderEmpty","components","cell","pagination","rowSelection","Title","Typography","styles","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","children","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","configItem","dep","valueId","effect","effectOption","findOptionInLinkAge","tarConfig","setValueInConfig","tarConfigGroup","configList","setValueInConfigGroup","keys","formValues","entries","renderInput","itemProps","initialValue","extra","tips","placement","dangerouslySetInnerHTML","__html","QuestionCircleOutlined","color","description","disable","renderInputSelect","retry_info","onRetryInfoChange","renderTextArea","autoSize","minRows","renderSelect","isRefresh","SyncOutlined","multiple","renderRadio","renderDatePicker","locale","showTime","disabledDate","moment","endOf","renderRangePicker","dispatchRenderFormItem","renderFormItem","list","restField","alignItems","minWidth","listItem","labelAlign","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Step","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","getParam","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","dynamicFormDataAdd","setDynamicFormDataAdd","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","setPrimaryKey","labelTitle","setLabelTitle","list_ui_type","setList_ui_type","list_ui_args","setList_ui_args","opsLink","setOpsLink","listColumns","setListColumns","isAllDataList","_setIsAllDataList","isAllDataListRef","isShowCollect","_setIsShowCollect","isShowCollectRef","isEchartShow","setIsEchartShow","setPageSize","listTitle","setListTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","url","getADUGTemplateApiInfo","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","ops_link","enable_favorite","echart","page_size","list_title","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","a","b","render","record","tarRes","actionList","singleAction","single","tableAction","fixed","overlay","Modal","ExclamationCircleOutlined","content","Promise","resolve","reject","actionADUGTemplateFavorite","fetchData","actionADUGTemplateCancelFavorite","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","okButtonProps","actionADUGTemplateDelete","confirmation","actionADUGTemplateSingle","result","link","window","open","tarColumns","addColumnsMap","reTryInfoQuene","reTryInfoFlag","formRes","hasOwnProperty","handleReTryInfo","tar","actionADUGTemplateRetryInfo","exist_add_args","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","itemInfo","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setBaseUrl","setLabelMap","currentTableWidth","formatFilterParams","temlateId","model_name","opr","sourceOprList","currentOpr","only_favorite","form_data","str_related","page","getADUGTemplateList","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","maxCount","headers","authorization","beforeUpload","file","isCSV","Upload","status","notification","response","Array","isArray","actionADUGTemplateAdd","tarIndex","listItemKey","listItemValue","actionADUGTemplateUpdate","whiteSpace","isSubRoute","reload","RollbackOutlined","crumbs","idx","ChartOptionTempalte","TableBox","checked","checkedChildren","unCheckedChildren","defaultChecked","actionADUGTemplateMuliple","ids","handleMultiRecord","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak","actionADUGTemplateChartOption","currentOps","eval"],"sourceRoot":""}